%%
clear all;
cd('C:\Users\mvdm\Dropbox\projects\DecodingQuantified\results');

%%
cfg_plot.fs = 14;
cfg_plot.cols = 'bcm';
cfg_plot.maxPnan = 0.8; % maximum proportion of decoding time bins that can be NaN for session to be included
cfg_plot.minPassed = 0.2; % minimum proportion of nActiveNeurons criterion met for session to be included
cfg_plot.xoff = -0.1:0.1/3:0.1; 
cfg_plot.N = 24;  % N to use for errorbar SEM; note this gets overwritten based on actual number of sessions used
cfg_plot.minCells = 20;

% output files to use, generated by GENERATE_singleLapDist.m
what = {'ALL_decErr_LOOCV_singleLapDist_001_1.mat', ...
    'ALL_decErr_LOOCV_singleLapDist_005_1.mat', ...
    'ALL_decErr_LOOCV_singleLapDist_01_3.mat'};

whatL = {'0.01/1','0.05/1','0.1/3','',''};

%% run

clear h h2;
for iW = 1:length(what)
    
    % load
    load(what{iW});
    
    xl = ALL_decErr.cfg.nEncLaps;
    
    % mask
    toss_idx = find(ALL_decErr.left.Pnan > cfg_plot.maxPnan | ALL_decErr.left.Ppassed < cfg_plot.minPassed);
    this_meanErrL = ALL_decErr.left.meanErr;
    this_meanErrL(toss_idx) = NaN;
    
    toss_idx = find(ALL_decErr.right.Pnan > cfg_plot.maxPnan | ALL_decErr.right.Ppassed < cfg_plot.minPassed);
    this_meanErrR = ALL_decErr.right.meanErr;
    this_meanErrR(toss_idx) = NaN;
    
    % mask - nCells
    nSessions = size(ALL_decErr.left.meanErr,1);
    keep_idx = ones(nSessions,1);
    for iS = 1:nSessions
        if length(ALL_decErr.left.S{iS}.t) < cfg_plot.minCells | length(ALL_decErr.right.S{iS}.t) < cfg_plot.minCells
            keep_idx(iS) = 0;
        end
    end
    this_meanErrL(~keep_idx,:) = NaN;
    this_meanErrR(~keep_idx,:) = NaN;
    cfg_plot.N = sum(keep_idx);
    
    %
    clear temp;
    temp(1,:,:) = this_meanErrL;
    temp(2,:,:) = this_meanErrR;
    temp = sq(nanmean(temp));
    
    this_mean = nanmean(temp);
    this_sem = nanstd(temp)./sqrt(cfg_plot.N);
    
    subplot(221);
    h(iW) = plot(xl+cfg_plot.xoff(iW),this_mean,'Color',cfg_plot.cols(iW),'Marker','.','MarkerSize',20);
    hold on;
    errorbar(xl+cfg_plot.xoff(iW),this_mean,this_sem,'Color',cfg_plot.cols(iW),'LineStyle','none');
    set(gca,'XLim',[-10.5 10.5],'XTick',-10:5:10,'LineWidth',1,'TickDir','out','FontSize',cfg_plot.fs); box off;
    xlabel('trial distance'); ylabel('decoding error (cm)');

    tempN = temp;
    tempN = tempN./repmat(tempN(:,11),[1 size(tempN,2)]);
    
    this_meanN = nanmean(tempN);
    this_semN = nanstd(tempN)./sqrt(cfg_plot.N);
    
    subplot(222);
    h2(iW) = plot(xl+cfg_plot.xoff(iW),this_meanN,'Color',cfg_plot.cols(iW),'Marker','.','MarkerSize',20);
    hold on;
    errorbar(xl+cfg_plot.xoff(iW),this_meanN,this_semN,'Color',cfg_plot.cols(iW),'LineStyle','none');
    set(gca,'XLim',[-10.5 10.5],'XTick',-10:5:10,'LineWidth',1,'TickDir','out','FontSize',cfg_plot.fs); box off;
    xlabel('trial distance'); ylabel('decoding error (normalized)');
     
    % by distance plots
    subplot(223);
    
    clear dist_mat;
    dist_mat(1,:,:) = temp(:,[10:-1:1]);
    dist_mat(2,:,:) = temp(:,12:end);
    dist_mat = sq(nanmean(dist_mat));
    
    plot([1:10]+cfg_plot.xoff(iW),nanmean(dist_mat),'Color',cfg_plot.cols(iW),'Marker','.','MarkerSize',20);
    hold on;
    errorbar([1:10]+cfg_plot.xoff(iW),nanmean(dist_mat),nanstd(dist_mat)./sqrt(cfg_plot.N),'Color',cfg_plot.cols(iW),'LineStyle','none');
    set(gca,'XLim',[0.5 10.5],'XTick',-10:5:10,'LineWidth',1,'TickDir','out','FontSize',cfg_plot.fs); box off;
    xlabel('trial distance'); ylabel('decoding error (cm)');
    
    %
    [sess,grp] = meshgrid(1:24,1:10); grp = grp'; sess = sess';
    df = table(grp(:),sess(:),dist_mat(:),'VariableNames',{'dist','sess','decErr'});
    lme = fitlme(df,'decErr ~ dist + (1|sess)');
    a = anova(lme);
    fprintf('%s raw F = %.2f, p = %1.2e\n',whatL{iW},a.FStat(2),a.pValue(2)); 
    
    subplot(224);
    clear dist_mat
    dist_mat(1,:,:) = tempN(:,[10:-1:1]);
    dist_mat(2,:,:) = tempN(:,12:end);
    dist_mat = sq(nanmean(dist_mat));
    
    plot([1:10]+cfg_plot.xoff(iW),nanmean(dist_mat),'Color',cfg_plot.cols(iW),'Marker','.','MarkerSize',20);
    hold on;
    errorbar([1:10]+cfg_plot.xoff(iW),nanmean(dist_mat),nanstd(dist_mat)./sqrt(cfg_plot.N),'Color',cfg_plot.cols(iW),'LineStyle','none');
    set(gca,'XLim',[0.5 10.5],'XTick',-10:5:10,'LineWidth',1,'TickDir','out','FontSize',cfg_plot.fs); box off;
    xlabel('trial distance'); ylabel('decoding error (normalized)');
    
    %
    [sess,grp] = meshgrid(1:24,1:10); grp = grp'; sess = sess';
    df = table(grp(:),sess(:),dist_mat(:),'VariableNames',{'dist','sess','decErr'});
    lme = fitlme(df,'decErr ~ 1 + dist + (1|sess)');
    a = anova(lme);
    fprintf('%s norm F = %.2f, p = %1.2e\n',whatL{iW},a.FStat(2),a.pValue(2));    
    
end

%%
subplot(221); 
legend(h,whatL,'Location','Southeast'); legend boxoff;

%%
set(gcf,'PaperPositionMode','auto');
print(gcf,'-dpng','-r300','decAcc_singleLapDist.png');
print(gcf,'-depsc','decAcc_singleLapDist.eps');
